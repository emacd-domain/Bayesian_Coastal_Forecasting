load era5_pc_coeffs.mat

% get filenames for u10
filenames_u10=[];
dinfo = dir('..\O2_era5_variables\u10_wind_at_domain_locs\*.mat');
for K=1:length(dinfo)
  iname = string(dinfo(K).name);
  filenames_u10=[filenames_u10;iname];
end

% get filenames for v10
filenames_v10=[];
dinfo = dir('..\O2_era5_variables\v10_wind_at_domain_locs\*.mat');
for K=1:length(dinfo)
  iname = string(dinfo(K).name);
  filenames_v10=[filenames_v10;iname];
end

% get filenames for mslp
filenames_mslp=[];
dinfo = dir('..\O2_era5_variables\msl_pressure_at_domain_locs\*.mat');
for K=1:length(dinfo)
  iname = string(dinfo(K).name);
  filenames_mslp=[filenames_mslp;iname];
end

% load files and concatenate u10
for i=41:length(filenames_u10)
    var = load('..\O2_era5_variables\u10_wind_at_domain_locs\'+filenames_u10(i),"-mat");
    %if (i == 1)
    U = var.U10;
    %else
    %    U = [U; var.U10];
    %end
end

% load files and concatenate v10
for i=41:length(filenames_v10)
    var = load('..\O2_era5_variables\v10_wind_at_domain_locs\'+filenames_v10(i),"-mat");
    %if (i == 1)
    V = var.V10;
    %else
    %    V = [V; var.V10];
    %end
end

% load files and concatenate msl
for i=41:length(filenames_msl)
    var = load('..\O2_era5_variables\msl_pressure_at_domain_locs\'+filenames_mslp(i),"-mat");
    %if (i == 1)
        P = var.MSL;
    else
        P = [P; var.MSL];
    end
end

% merge files
era5_domain_inputs = synchronize(U,V,P);
era5_domain_inputs=retime(era5_domain_inputs,'hourly');
era5_domain_inputs=[era5_domain_inputs.u10ord,era5_domain_inputs.v10ord,era5_domain_inputs.mslord];

% mean average

meanav = nanmean(era5_domain_inputs);

pcs = nan(size(era5_domain_inputs));

for i = 1:length(era5_domain_inputs)
    try
        % must subtract th mean before applying pc coefficients
        pcs(i,:) = (era5_domain_inputs(i,:)-meanav)*era5_pc_coeffs;
    catch
        continue
    end
end

era5_pcs_2020 = pcs(:,1:8); 

save("era5_pcs_2020.mat","era5_pcs_2020")
